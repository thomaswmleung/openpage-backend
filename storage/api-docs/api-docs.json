{
    "swagger": "2.0",
    "info": {
        "title": "Openpage API",
        "version": "1.0.0"
    },
    "basePath": "/openpage-backend/public",
    "paths": {
        "/book": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Returns list of books",
                "description": "Returns book data",
                "operationId": "book_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter by title",
                        "type": "string"
                    },
                    {
                        "name": "subtitle",
                        "in": "query",
                        "description": "Filter by sub title",
                        "type": "string"
                    },
                    {
                        "name": "school_name",
                        "in": "query",
                        "description": "Filter by school name",
                        "type": "string"
                    },
                    {
                        "name": "level",
                        "in": "query",
                        "description": "Filter by level",
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Filter by version",
                        "type": "string"
                    },
                    {
                        "name": "subject",
                        "in": "query",
                        "description": "Filter by subject",
                        "type": "string"
                    },
                    {
                        "name": "keywords[]",
                        "in": "query",
                        "description": "Filter by book keywords",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "description": "Filter by organization id",
                        "type": "string"
                    },
                    {
                        "name": "codex_id",
                        "in": "query",
                        "description": "Filter by codex",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by value",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "created_at",
                                "school_name",
                                "level",
                                "title",
                                "published_year"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by Ascending or descending",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Book"
                ],
                "summary": "Update book details",
                "description": "",
                "operationId": "create_book",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "book json input <br> Sample JSON to update book http://jsoneditoronline.org/?id=c1e3c692d29b2b221ec0a59e6c1a1430",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Book"
                ],
                "summary": "Creates a book",
                "description": "",
                "operationId": "create_book",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "book json input <br> Sample JSON to create book http://jsoneditoronline.org/?id=bcddc70528339bf6e057c113c68f1ee5",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Book"
                ],
                "summary": "delete book data",
                "description": "Delete book from system",
                "operationId": "delete_book",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the book that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/book/{_id}": {
            "get": {
                "tags": [
                    "Book"
                ],
                "summary": "Returns book data",
                "description": "Returns book data",
                "operationId": "book_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the book that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid book id"
                    }
                }
            }
        },
        "/book_cover": {
            "post": {
                "tags": [
                    "Book Cover"
                ],
                "summary": "Creates a book cover",
                "description": "",
                "operationId": "create_book_cover",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "book json input <br> Sample JSON to create book http://jsoneditoronline.org/?id=bcddc70528339bf6e057c113c68f1ee5",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/bulk_upload": {
            "post": {
                "tags": [
                    "Bulk Upload Page Group"
                ],
                "summary": "Bulk upload api for creating page groups",
                "description": "Bulk upload api for creating page groups",
                "operationId": "bulk_upload",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "archive_file",
                        "in": "formData",
                        "description": "Archive file to upload(.zip)",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "meta_data_csv_file",
                        "in": "formData",
                        "description": "Meta data file to upload(.xlsx)",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/get_bulk_upload_request_list": {
            "get": {
                "tags": [
                    "Bulk Upload Page Group"
                ],
                "summary": "Returns bulk upload data",
                "description": "Returns bulk upload  data",
                "operationId": "get_bulk_upload_request_list",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/get_bulk_upload_details/{req_id}": {
            "get": {
                "tags": [
                    "Bulk Upload Page Group"
                ],
                "summary": "Returns Bulk Upload details",
                "description": "Returns Bulk Upload details",
                "operationId": "get_bulk_upload_details",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "req_id",
                        "in": "path",
                        "description": "ID of the bulk upload to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/class": {
            "get": {
                "tags": [
                    "Class"
                ],
                "summary": "Returns list of class",
                "description": "Returns class data",
                "operationId": "class_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Class"
                ],
                "summary": "Update class details",
                "description": "",
                "operationId": "add_or_update_class",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "class json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Class"
                ],
                "summary": "Create a class",
                "description": "",
                "operationId": "add_or_update_class",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "class json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Class"
                ],
                "summary": "delete class data",
                "description": "Delete class from system",
                "operationId": "delete_class",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the class that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/class/{_id}": {
            "get": {
                "tags": [
                    "Class"
                ],
                "summary": "Returns class data",
                "description": "Returns class data",
                "operationId": "class_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the class that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid class id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/class_flow": {
            "get": {
                "tags": [
                    "Class Flow"
                ],
                "summary": "Returns list of class flow",
                "description": "Returns class flow data",
                "operationId": "class_flow_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Class Flow"
                ],
                "summary": "Update class flow details",
                "description": "",
                "operationId": "add_or_update_class_flow",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Class json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Class Flow"
                ],
                "summary": "Create a class flow",
                "description": "",
                "operationId": "add_or_update_class_flow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Class json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Class Flow"
                ],
                "summary": "delete class flow data",
                "description": "Delete class flow from system",
                "operationId": "delete_class flow",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the class_flow that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/class_flow/{_id}": {
            "get": {
                "tags": [
                    "Class Flow"
                ],
                "summary": "Returns class flow data",
                "description": "Returns class flow data",
                "operationId": "class_flow_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the class that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid class flow id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/codex": {
            "get": {
                "tags": [
                    "Codex"
                ],
                "summary": "Returns list of codex",
                "description": "Returns codex data",
                "operationId": "codex",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search based on name, description, label",
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter by user id",
                        "type": "string"
                    },
                    {
                        "name": "label",
                        "in": "query",
                        "description": "Filter by label ",
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Create at start date(YYYY-mm-dd) ",
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Create at end date(YYYY-mm-dd) ",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by value",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "created_at",
                                "name",
                                "description",
                                "label"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by Ascending or descending",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Codex"
                ],
                "summary": "Update codex  data",
                "description": "Update codex  in the system",
                "operationId": "update_codex",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cid",
                        "in": "query",
                        "description": "ID of the codex that needs to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the codex",
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "description of the codex",
                        "type": "string"
                    },
                    {
                        "name": "label",
                        "in": "query",
                        "description": "label of the codex",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Codex"
                ],
                "summary": "Creating/Storing new codex",
                "description": "Stores codex in the system",
                "operationId": "create_codex",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the codex",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "description of the codex",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "codex_image",
                        "in": "formData",
                        "description": "code image to upload",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "label",
                        "in": "query",
                        "description": "label of the codex",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Codex"
                ],
                "summary": "delete codex  data",
                "description": "Delete codex file in the system",
                "operationId": "delete_codex",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cid",
                        "in": "query",
                        "description": "ID of the codex that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/codex/{cid}": {
            "get": {
                "tags": [
                    "Codex"
                ],
                "summary": "Returns codex data",
                "description": "Returns codex data",
                "operationId": "codex",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "cid",
                        "in": "path",
                        "description": "ID of the codex that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid codex id"
                    }
                }
            }
        },
        "/domain": {
            "get": {
                "tags": [
                    "Domain"
                ],
                "summary": "Returns list of domain",
                "description": "Returns domain data",
                "operationId": "domain_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Domain"
                ],
                "summary": "Update domain details",
                "description": "",
                "operationId": "add_or_update_domain",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Class json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Domain"
                ],
                "summary": "Create a domain",
                "description": "",
                "operationId": "add_or_update_domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Class json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Domain"
                ],
                "summary": "delete domain data",
                "description": "Delete domain from system",
                "operationId": "delete_domain",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the domain that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/domain/{_id}": {
            "get": {
                "tags": [
                    "Domain"
                ],
                "summary": "Returns domain flow data",
                "description": "Returns domain data",
                "operationId": "domain_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the domain that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid domain id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/keyword": {
            "get": {
                "tags": [
                    "Keyword"
                ],
                "summary": "Returns list of keywords",
                "description": "Returns keywords data",
                "operationId": "keyword_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Keyword"
                ],
                "summary": "Update keyword details",
                "description": "",
                "operationId": "create_or_update_keyword",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "keyword json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Keyword"
                ],
                "summary": "Create a keyword",
                "description": "Create a keyword",
                "operationId": "create_or_update_keyword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Keyword json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Keyword"
                ],
                "summary": "delete keyword data",
                "description": "Delete keyword from system",
                "operationId": "delete_keyword",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the keyword that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/keyword/{_id}": {
            "get": {
                "tags": [
                    "Keyword"
                ],
                "summary": "Returns keyword data",
                "description": "Returns keyword data",
                "operationId": "keyword_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the keyword that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid keyword id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/knowledge_unit": {
            "get": {
                "tags": [
                    "Knowledge Unit"
                ],
                "summary": "Returns list of knowledge unit",
                "description": "Returns knowledge unit data",
                "operationId": "knowledge_unit_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Knowledge Unit"
                ],
                "summary": "Update knowledge_unit details",
                "description": "",
                "operationId": "add_or_update_knowledge_unit",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Knowledge Unit json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Knowledge Unit"
                ],
                "summary": "Create a knowledge_unit",
                "description": "",
                "operationId": "add_or_update_knowledge_unit",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Knowledge Unit json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Knowledge Unit"
                ],
                "summary": "delete knowledge_unit data",
                "description": "Delete knowledge unit from system",
                "operationId": "delete_knowledge_unit",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the knowledge_unit that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/knowledge_unit/{_id}": {
            "get": {
                "tags": [
                    "Knowledge Unit"
                ],
                "summary": "Returns knowledge unit flow data",
                "description": "Returns knowledge unit data",
                "operationId": "knowledge_unit_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the knowledge unit that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid knowledge unit id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/layout": {
            "get": {
                "tags": [
                    "Layout"
                ],
                "summary": "Returns list of layout",
                "description": "Returns layout data",
                "operationId": "layout_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Layout"
                ],
                "summary": "Update layout details",
                "description": "",
                "operationId": "add_or_update_layout",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Subject json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Layout"
                ],
                "summary": "Create a layout",
                "description": "",
                "operationId": "add_or_update_layout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "subject json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Layout"
                ],
                "summary": "delete layout data",
                "description": "Delete layout from system",
                "operationId": "delete_layout",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the layout that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/layout/{_id}": {
            "get": {
                "tags": [
                    "Layout"
                ],
                "summary": "Returns layout data",
                "description": "Returns layout data",
                "operationId": "layout_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the layout that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid layout id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The user name for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/media": {
            "get": {
                "tags": [
                    "Media"
                ],
                "summary": "Returns list of media",
                "description": "Returns media data",
                "operationId": "media",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search based on remark, type, extension and tags",
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "Filter by user id",
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter by media type",
                        "type": "string"
                    },
                    {
                        "name": "remark",
                        "in": "query",
                        "description": "Filter by media remark",
                        "type": "string"
                    },
                    {
                        "name": "tag[]",
                        "in": "query",
                        "description": "Filter by media tag",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "extension",
                        "in": "query",
                        "description": "Filter by media extension",
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Create at start date(YYYY-mm-dd) ",
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Create at end date(YYYY-mm-dd) ",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by value",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "created_at",
                                "type",
                                "extension"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by Ascending or descending",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Media"
                ],
                "summary": "Update media file data",
                "description": "Update media file in the system",
                "operationId": "update_media",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "mid",
                        "in": "query",
                        "description": "ID of the media that needs to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "usage[]",
                        "in": "query",
                        "description": "The page ids array field.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "remark",
                        "in": "query",
                        "description": "Remark of the media",
                        "type": "string"
                    },
                    {
                        "name": "tag[]",
                        "in": "query",
                        "description": "tags for the media.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Media"
                ],
                "summary": "Creating/Storing new media file",
                "description": "Stores media file in the system",
                "operationId": "create_media",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of media file to be uploaded",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "extension",
                        "in": "query",
                        "description": "Extension of media file",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "media_file",
                        "in": "formData",
                        "description": "file to upload",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "usage[]",
                        "in": "query",
                        "description": "The page ids array field.",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "remark",
                        "in": "query",
                        "description": "Remark of the media",
                        "type": "string"
                    },
                    {
                        "name": "tag[]",
                        "in": "query",
                        "description": "tags for the media.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Media"
                ],
                "summary": "delete media file data",
                "description": "Delete media file in the system",
                "operationId": "delete_media",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "mid",
                        "in": "query",
                        "description": "ID of the media that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/media/{mid}": {
            "get": {
                "tags": [
                    "Media"
                ],
                "summary": "Returns media data",
                "description": "Returns media data",
                "operationId": "media",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "mid",
                        "in": "path",
                        "description": "ID of the media that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid media id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/order": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Returns list of order",
                "description": "Returns order data",
                "operationId": "order_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Created at start date(YYYY-mm-dd) ",
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Created at end date(YYYY-mm-dd) ",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by value",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "created_at"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by Ascending or descending",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "summary": "Update order details",
                "description": "",
                "operationId": "add_or_update_order",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "order json input <br> Sample JSON to update order http://jsoneditoronline.org/?id=358062bd4c079cf42e9e2d4bfb627b10",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Create a order",
                "description": "",
                "operationId": "add_or_update_order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "order json input <br> Sample JSON to create order http://jsoneditoronline.org/?id=285c21877cf510b2b3855d796cd22a7e",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "summary": "delete order data",
                "description": "Delete order from system",
                "operationId": "delete_order",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the order that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/order/{_id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Returns order data",
                "description": "Returns order data",
                "operationId": "order_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the order that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid order id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/organization": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Returns list of organizations",
                "description": "Returns organization  data",
                "operationId": "organization",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Organization"
                ],
                "summary": "Updating organization information",
                "description": "Updation of organization",
                "operationId": "create_organization",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of organization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the organization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "address of the organization",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email of the organization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contact_person",
                        "in": "query",
                        "description": "contact person of the organization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of the organization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id[]",
                        "in": "query",
                        "description": "The user ids of organization",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "logo",
                        "in": "query",
                        "description": "logo of the organization",
                        "type": "string"
                    },
                    {
                        "name": "remark",
                        "in": "query",
                        "description": "remark of the organization",
                        "type": "string"
                    },
                    {
                        "name": "consultant[]",
                        "in": "query",
                        "description": "The consultants of organization",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "role[]",
                        "in": "query",
                        "description": "The roles of organization",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Organization"
                ],
                "summary": "Creating/Storing new organization",
                "description": "Creation of organization",
                "operationId": "create_organization",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the organization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "query",
                        "description": "address of the organization",
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email of the organization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "contact_person",
                        "in": "query",
                        "description": "contact person of the organization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of the organization",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id[]",
                        "in": "query",
                        "description": "The user ids of organization",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "logo",
                        "in": "query",
                        "description": "logo of the organization",
                        "type": "string"
                    },
                    {
                        "name": "remark",
                        "in": "query",
                        "description": "remark of the organization",
                        "type": "string"
                    },
                    {
                        "name": "consultant[]",
                        "in": "query",
                        "description": "The consultants of organization",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "role[]",
                        "in": "query",
                        "description": "The roles of organization",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Organization"
                ],
                "summary": "delete organization data",
                "description": "Delete organization in the system",
                "operationId": "delete_organization",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the organization that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/organization/{_id}": {
            "get": {
                "tags": [
                    "Organization"
                ],
                "summary": "Returns organization data",
                "description": "Returns organization data",
                "operationId": "organization",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the organization that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid question type id"
                    }
                }
            }
        },
        "/page": {
            "get": {
                "tags": [
                    "Page"
                ],
                "summary": "Returns list of page",
                "description": "Returns page data",
                "operationId": "page_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter by title",
                        "type": "string"
                    },
                    {
                        "name": "sub_title",
                        "in": "query",
                        "description": "Filter by sub title",
                        "type": "string"
                    },
                    {
                        "name": "subject",
                        "in": "query",
                        "description": "Filter by subject",
                        "type": "string"
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "Filter by domain",
                        "type": "string"
                    },
                    {
                        "name": "subdomain",
                        "in": "query",
                        "description": "Filter by subdomain",
                        "type": "string"
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "Filter created by user id",
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Created at start date(YYYY-mm-dd) ",
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Created at end date(YYYY-mm-dd) ",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by value",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "created_at",
                                "title",
                                "sub_title"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by Ascending or descending",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Page"
                ],
                "summary": "Update section details",
                "description": "",
                "operationId": "add_or_update_page",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "page json input <br> Sample JSON to update page http://jsoneditoronline.org/?id=5303c1ff44a7820b2838612686f1ab5a",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Page"
                ],
                "summary": "Create a page",
                "description": "",
                "operationId": "add_or_update_page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "page json input <br> Sample JSON to create page http://jsoneditoronline.org/?id=02ce8308e8e7e964122bf007036b6621",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Page"
                ],
                "summary": "delete page data",
                "description": "Delete page from system",
                "operationId": "delete_page",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pid",
                        "in": "query",
                        "description": "ID of the page that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/page/{page_id}": {
            "get": {
                "tags": [
                    "Page"
                ],
                "summary": "Returns page data",
                "description": "Returns page data",
                "operationId": "section_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page_id",
                        "in": "path",
                        "description": "ID of the page that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid page id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/page_group": {
            "get": {
                "tags": [
                    "page_group"
                ],
                "summary": "Returns list of page group",
                "description": "Returns page group data",
                "operationId": "get_page_group",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "codex",
                        "in": "query",
                        "description": "Filter by codex",
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter by title",
                        "type": "string"
                    },
                    {
                        "name": "sub_title",
                        "in": "query",
                        "description": "Filter by sub title",
                        "type": "string"
                    },
                    {
                        "name": "subject",
                        "in": "query",
                        "description": "Filter by subject",
                        "type": "string"
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "Filter by domain",
                        "type": "string"
                    },
                    {
                        "name": "subdomain",
                        "in": "query",
                        "description": "Filter by subdomain",
                        "type": "string"
                    },
                    {
                        "name": "learning_objective",
                        "in": "query",
                        "description": "Filter by learning objective",
                        "type": "string"
                    },
                    {
                        "name": "particulars",
                        "in": "query",
                        "description": "Filter by particulars",
                        "type": "string"
                    },
                    {
                        "name": "level_of_difficulty",
                        "in": "query",
                        "description": "Filter by level of difficulty",
                        "type": "string"
                    },
                    {
                        "name": "syllabus_code",
                        "in": "query",
                        "description": "Filter by syllabus code",
                        "type": "string"
                    },
                    {
                        "name": "created_by",
                        "in": "query",
                        "description": "Filter created by user id",
                        "type": "string"
                    },
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Created at start date(YYYY-mm-dd) ",
                        "type": "string"
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "Created at end date(YYYY-mm-dd) ",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by value",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "created_at",
                                "title",
                                "sub_title"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by Ascending or descending",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "page_group"
                ],
                "summary": "Create a page group",
                "description": "",
                "operationId": "create_page_group",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "page group json input <br> Sample JSON to update page group http://jsoneditoronline.org/?id=006e448f74cf6f8673d10d8513b2a247",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "page_group"
                ],
                "summary": "Create a page group",
                "description": "",
                "operationId": "create_page_group",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "page group json input <br> Sample JSON to create page group http://jsoneditoronline.org/?id=f63e8d7425c66d5b8abf4bcf71eebb46",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "page_group"
                ],
                "summary": "delete page group data",
                "description": "Delete page group from system",
                "operationId": "delete_page_group",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pid",
                        "in": "query",
                        "description": "ID of the page group that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/page_group/{pid}": {
            "get": {
                "tags": [
                    "page_group"
                ],
                "summary": "Returns page group data",
                "description": "Returns page group data",
                "operationId": "get_page_group",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "pid",
                        "in": "path",
                        "description": "ID of the page group that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid media id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/particular": {
            "get": {
                "tags": [
                    "Particular"
                ],
                "summary": "Returns list of Particular ",
                "description": "Returns Particular  data",
                "operationId": "particular_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Particular"
                ],
                "summary": "Update particular details",
                "description": "",
                "operationId": "add_or_update_particular",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Update particular document <br> Sample JSON http://jsoneditoronline.org/?id=5f498ec51cd3cb139241dfdd61a181c3",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Particular"
                ],
                "summary": "Create a particular",
                "description": "",
                "operationId": "add_or_update_particular",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Create particular document <br> Sample JSON http://jsoneditoronline.org/?id=b2f6cc5c7648377b4367795a45dd0fc8",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Particular"
                ],
                "summary": "delete particular data",
                "description": "Delete knowledge  from system",
                "operationId": "delete_particular",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the particular that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/particular/{_id}": {
            "get": {
                "tags": [
                    "Particular"
                ],
                "summary": "Returns Particular  flow data",
                "description": "Returns Particular  data",
                "operationId": "particular_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the Particular  that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid Particular  id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/question_type": {
            "get": {
                "tags": [
                    "Question Type"
                ],
                "summary": "Returns list of question types",
                "description": "Returns question types data",
                "operationId": "question_type",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Question Type"
                ],
                "summary": "Updating question types",
                "description": "Updating of question types",
                "operationId": "update_question_type",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "Id of the question type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of question",
                        "type": "string"
                    },
                    {
                        "name": "block[]",
                        "in": "query",
                        "description": "The question types",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Question Type"
                ],
                "summary": "Creating/Storing new question types",
                "description": "Creation of question types",
                "operationId": "create_question_type",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of the question",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "block[]",
                        "in": "query",
                        "description": "The question types",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Question Type"
                ],
                "summary": "delete Question Type data",
                "description": "Delete Question Type in the system",
                "operationId": "delete_question_type",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the question type that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/question_type/{_id}": {
            "get": {
                "tags": [
                    "Question Type"
                ],
                "summary": "Returns question type data",
                "description": "Returns question types data",
                "operationId": "question_type",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the question type that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid question type id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/question": {
            "get": {
                "tags": [
                    "Question"
                ],
                "summary": "Returns list of question",
                "description": "Returns question data",
                "operationId": "question_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Question"
                ],
                "summary": "Update question details",
                "description": "",
                "operationId": "add_or_update_question",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "question json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Question"
                ],
                "summary": "Create a question",
                "description": "",
                "operationId": "add_or_update_question",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "question json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Question"
                ],
                "summary": "delete question data",
                "description": "Delete question from system",
                "operationId": "delete_question",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the question that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/question/{_id}": {
            "get": {
                "tags": [
                    "Question"
                ],
                "summary": "Returns question data",
                "description": "Returns question data",
                "operationId": "question_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the question that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid question id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/resource_category": {
            "get": {
                "tags": [
                    "Resource Category"
                ],
                "summary": "Returns list of resource category",
                "description": "Returns resource category data",
                "operationId": "resource_category_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Resource Category"
                ],
                "summary": "Update resource category details",
                "description": "",
                "operationId": "add_or_update_resource_category",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "resource_category_id",
                        "in": "query",
                        "description": "Resource category id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "resource_category",
                        "in": "query",
                        "description": "Resource category name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Resource Category"
                ],
                "summary": "Create a resource_category",
                "description": "",
                "operationId": "add_or_update_resource_category",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "resource_category",
                        "in": "query",
                        "description": "Resource category  input",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Resource Category"
                ],
                "summary": "delete resource category data",
                "description": "Delete resource category from system",
                "operationId": "delete_resource_category",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the resource category that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/resource_category/{_id}": {
            "get": {
                "tags": [
                    "Resource Category"
                ],
                "summary": "Returns resource_category data",
                "description": "Returns resource_category data",
                "operationId": "resource_category_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the resource_category that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid resource_category id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/resource": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Returns list of resource",
                "description": "Returns resource data",
                "operationId": "resource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search based on remark and tags",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Resource"
                ],
                "summary": "Creating/Storing new resource ",
                "description": "Stores resource in the system",
                "operationId": "create_or_update_resource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "Resource id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of resource",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Description of resource",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of resource",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "resource_category_id",
                        "in": "query",
                        "description": "Resource category ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "URL of resource",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "remark",
                        "in": "query",
                        "description": "Remark of the resource",
                        "type": "string"
                    },
                    {
                        "name": "tag[]",
                        "in": "query",
                        "description": "tags for the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Resource"
                ],
                "summary": "Creating/Storing new resource ",
                "description": "Stores resource in the system",
                "operationId": "create_or_update_resource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Title of resource",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Description of resource",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of resource",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "resource_category_id",
                        "in": "query",
                        "description": "Resource category ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "url",
                        "in": "query",
                        "description": "URL of resource",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "remark",
                        "in": "query",
                        "description": "Remark of the resource",
                        "type": "string"
                    },
                    {
                        "name": "tag[]",
                        "in": "query",
                        "description": "tags for the resource.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Resource"
                ],
                "summary": "delete resource data",
                "description": "Delete resource from system",
                "operationId": "delete_resource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the resource that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/resource/{_id}": {
            "get": {
                "tags": [
                    "Resource"
                ],
                "summary": "Returns resource data",
                "description": "Returns resource data",
                "operationId": "resource",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the resource that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid resource id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/section": {
            "get": {
                "tags": [
                    "Section"
                ],
                "summary": "Returns list of section",
                "description": "Returns section data",
                "operationId": "section_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Section"
                ],
                "summary": "Update section details",
                "description": "",
                "operationId": "add_or_update_section",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Section json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Section"
                ],
                "summary": "Create a Section",
                "description": "",
                "operationId": "add_or_update_section",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "section json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Section"
                ],
                "summary": "delete section data",
                "description": "Delete section from system",
                "operationId": "delete_section",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the section that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/section/{_id}": {
            "get": {
                "tags": [
                    "Section"
                ],
                "summary": "Returns section data",
                "description": "Returns section data",
                "operationId": "section_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the section that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid section id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/static_html_page": {
            "get": {
                "tags": [
                    "Static HTML page"
                ],
                "summary": "Returns list of static pages",
                "description": "Returns static pages data",
                "operationId": "static_html_page",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "page_code",
                        "in": "query",
                        "description": "Filter by page code",
                        "type": "string"
                    },
                    {
                        "name": "reference_1",
                        "in": "query",
                        "description": "Filter by page reference 1",
                        "type": "string"
                    },
                    {
                        "name": "reference_2",
                        "in": "query",
                        "description": "Filter by page reference 2",
                        "type": "string"
                    },
                    {
                        "name": "reference_3",
                        "in": "query",
                        "description": "Filter by page reference 3",
                        "type": "string"
                    },
                    {
                        "name": "reference_4",
                        "in": "query",
                        "description": "Filter by page reference 4",
                        "type": "string"
                    },
                    {
                        "name": "reference_5",
                        "in": "query",
                        "description": "Filter by page reference 5",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort by value",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "page_code",
                                "reference_1",
                                "reference_2",
                                "reference_3",
                                "reference_4",
                                "reference_5"
                            ]
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "description": "Order by Ascending or descending",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "DESC",
                            "enum": [
                                "ASC",
                                "DESC"
                            ]
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Static HTML page"
                ],
                "summary": "Update static page details",
                "description": "Update static page details",
                "operationId": "add_or_update_static_html_page",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "static_html_page_id",
                        "in": "query",
                        "description": "static page id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "page_code",
                        "in": "query",
                        "description": "Page code of the static page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "content",
                        "in": "formData",
                        "description": "Page content of the static page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reference_1",
                        "in": "formData",
                        "description": "Page reference 1 of the static page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reference_2",
                        "in": "formData",
                        "description": "Page reference 2 of the static page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reference_3",
                        "in": "formData",
                        "description": "Page reference 3 of the static page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reference_4",
                        "in": "formData",
                        "description": "Page reference 4 of the static page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reference_5",
                        "in": "formData",
                        "description": "Page reference 5 of the static page",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Static HTML page"
                ],
                "summary": "Create a static_html_page",
                "description": "",
                "operationId": "add_or_update_static_html_page",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page_code",
                        "in": "query",
                        "description": "Page code of the static page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "content",
                        "in": "formData",
                        "description": "Page content of the static page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reference_1",
                        "in": "formData",
                        "description": "Page reference_1 of the static page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reference_2",
                        "in": "formData",
                        "description": "Page reference 2 of the static page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reference_3",
                        "in": "formData",
                        "description": "Page reference 3 of the static page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reference_4",
                        "in": "formData",
                        "description": "Page reference 4 of the static page",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "reference_5",
                        "in": "formData",
                        "description": "Page reference 5 of the static page",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Static HTML page"
                ],
                "summary": "delete static page data",
                "description": "Delete static page from system",
                "operationId": "delete_static_html_page",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the static page that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/static_html_page/{_id}": {
            "get": {
                "tags": [
                    "Static HTML page"
                ],
                "summary": "Returns Static page data",
                "description": "Returns Static page data",
                "operationId": "static_html_page",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the static html page that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid static html page id"
                    }
                }
            }
        },
        "/sub_domain": {
            "get": {
                "tags": [
                    "Sub Domain"
                ],
                "summary": "Returns list of sub domain",
                "description": "Returns sub domain data",
                "operationId": "sub_domain_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Sub Domain"
                ],
                "summary": "Update sub domain details",
                "description": "",
                "operationId": "add_or_update_sub_domain",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Sub Domain json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sub Domain"
                ],
                "summary": "Create a sub domain",
                "description": "",
                "operationId": "add_or_update_sub_domain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Sub domain json input",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Sub Domain"
                ],
                "summary": "delete sub domain data",
                "description": "Delete sub domain from system",
                "operationId": "delete_sub_domain",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the sub domain that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/sub_domain/{_id}": {
            "get": {
                "tags": [
                    "Sub Domain"
                ],
                "summary": "Returns sub_domain flow data",
                "description": "Returns sub domain data",
                "operationId": "sub_domain_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the sub domain that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid sub domain id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/subject": {
            "get": {
                "tags": [
                    "Subject"
                ],
                "summary": "Returns list of subjects",
                "description": "Returns subject data",
                "operationId": "subject_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Subject"
                ],
                "summary": "Update Subject details",
                "description": "",
                "operationId": "create_subject",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "Subject json input <br> Sample JSON to update subject http://jsoneditoronline.org/?id=071768eec0c9b53452c094e462b1adf1",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Subject"
                ],
                "summary": "Create a Subject",
                "description": "",
                "operationId": "create_subject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "description": "subject json input <br> Sample JSON to create subject http://www.jsoneditoronline.org/?id=e4805b21d8f8188e0375118c97724e09",
                        "required": true,
                        "schema": {}
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Subject"
                ],
                "summary": "delete subject data",
                "description": "Delete subject from system",
                "operationId": "delete_subject",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "query",
                        "description": "ID of the subject that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/subject/{_id}": {
            "get": {
                "tags": [
                    "Subject"
                ],
                "summary": "Returns subject data",
                "description": "Returns subject data",
                "operationId": "subject_list",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "_id",
                        "in": "path",
                        "description": "ID of the subject that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid subject id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Returns list of users",
                "description": "Returns users data",
                "operationId": "user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "search_key",
                        "in": "query",
                        "description": "Search parameter or key word to search",
                        "type": "string"
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "this is offset or skip the records",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of records to be retrieved ",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "User profile",
                "description": "User profile details",
                "operationId": "user_profile",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "profile_image",
                        "in": "formData",
                        "description": "file to upload",
                        "type": "file"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "First name of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Last name of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "description": "Organization id",
                        "type": "string"
                    },
                    {
                        "name": "metadata",
                        "in": "query",
                        "description": "User realted metadata",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/user/{uid}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Returns users data",
                "description": "Returns users data",
                "operationId": "user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "ID of the user that needs to be displayed",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid user id"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "User registration into the system",
                "description": "User registration into the system",
                "operationId": "register",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "profile_image",
                        "in": "formData",
                        "description": "file to upload",
                        "type": "file"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "First name of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Last name of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Email address of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User secured password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "description": "Organization id",
                        "type": "string"
                    },
                    {
                        "name": "metadata",
                        "in": "formData",
                        "description": "User realted metadata",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                }
            }
        },
        "/activate": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Activates user into the system",
                "description": "Activates user into the system",
                "operationId": "activate",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "User name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Activation key",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                }
            }
        },
        "/forgot_password": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Forgot password",
                "description": "Reset Password",
                "operationId": "forgot_password",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "Registered username",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                }
            }
        },
        "/reset_password": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Check if user is initiated for reset of password",
                "description": "Check if user is initiated for reset of password",
                "operationId": "user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "username of the user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid user id"
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Forgot password",
                "description": "Reset Password",
                "operationId": "reset_password",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "Registered username",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "New password",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid data supplied"
                    }
                }
            }
        }
    },
    "definitions": {},
    "securityDefinitions": {
        "token": {
            "type": "apiKey",
            "name": "token",
            "in": "header"
        }
    },
    "tags": [
        {
            "name": "Login",
            "description": "Login related API's"
        },
        {
            "name": "User",
            "description": "User related API's"
        },
        {
            "name": "Media",
            "description": "Media related API's"
        },
        {
            "name": "page_group",
            "description": "Page group related API's"
        },
        {
            "name": "Question Type",
            "description": "Question Type related API's"
        },
        {
            "name": "Organization",
            "description": "Organization related API's"
        },
        {
            "name": "Subject",
            "description": "Subject related API's"
        },
        {
            "name": "Book",
            "description": "Book related API's"
        },
        {
            "name": "Page",
            "description": "Page related API's"
        },
        {
            "name": "Section",
            "description": "Section related API's"
        },
        {
            "name": "Question",
            "description": "Question related API's"
        },
        {
            "name": "Resource",
            "description": "Resource related API's"
        },
        {
            "name": "Layout",
            "description": "Layout related API's"
        },
        {
            "name": "Class",
            "description": "Class related API's"
        },
        {
            "name": "Class Flow",
            "description": "Class Flow related API's"
        },
        {
            "name": "Keyword",
            "description": "Keyword related API's"
        },
        {
            "name": "Domain",
            "description": "Domain related API's"
        },
        {
            "name": "Sub Domain",
            "description": "Sub Domain related API's"
        },
        {
            "name": "Knowledge Unit",
            "description": "Knowledge Unit related API's"
        },
        {
            "name": "Particular",
            "description": "Particular related API's"
        },
        {
            "name": "Resource Category",
            "description": "Resource Category related API's"
        },
        {
            "name": "Codex",
            "description": "Codex related API's"
        },
        {
            "name": "Bulk Upload Page Group",
            "description": "Bulk upload api for creating page groups"
        },
        {
            "name": "Static HTML page",
            "description": "Static HTML page related API's"
        },
        {
            "name": "Order",
            "description": "Orders related API's"
        }
    ]
}